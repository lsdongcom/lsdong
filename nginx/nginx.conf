
user  nginx;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 200m;
    upload_progress proxied 1m;

    gzip  on;
    
    upstream tornados{
    	server 127.0.0.1:8000;
    }
    proxy_next_upstream error;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        # 静态文件直接由Nginx处理
        location /static/{
             alias /home/haven/lsdong/static/;
             expires 24h;
        }
        location /{
             proxy_pass_header Server;
             proxy_set_header Host $http_host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_pass http://tornados;
             proxy_redirect default;
        }
        # Upload form should be submitted to this location
        location /upload {
             # Pass altered request body to this location
             upload_pass   @test;

             # Store files to this directory
             # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
             upload_store /var/tmp/lsdong 1;
             upload_limit_rate 1024k;  
             # Allow uploaded files to be read only by user
             upload_store_access user:r;
              
             # Set specified fields in request body
             upload_set_form_field $upload_field_name.name "$upload_file_name";
             upload_set_form_field $upload_field_name.content_type "$upload_content_type";
             upload_set_form_field $upload_field_name.path "$upload_tmp_path";

             # Inform backend about hash and size of a file
             upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
             upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

             #upload_pass_form_field "^submit$|^description$|^_xsrf$";
             upload_pass_form_field "^.*$"; 

             upload_cleanup 400 404 499 500-505;
           
             track_uploads proxied 30s; 
        }

        # Pass altered request body to a backend
        location @test {
             proxy_pass   http://tornados;
        }    
    
        location ~ (.*)/x-progress-id:(\w*) {    
            rewrite ^(.*)/x-progress-id:(\w*)   $1?X-Progress-ID=$2;    
        }    
  
    	location ^~ /progress {  
    	     #此url来获取进度信息  
             report_uploads proxied;  
    	}  

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        error_page   405 =200 @405;
        location @405
        {
            proxy_pass   http://tornados;
        }    
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
